(ind Nat
    (Z :: Nat)
    (S :: Nat -> Nat))

(add (x y) match x
    (S x' -> S (add x' y))
    (Z -> y))

(pred y match y
    (S y' -> y')
    (Z -> y))

(sub (x y) match x
    (S x' -> pred (sub x' y))
    (Z -> y))